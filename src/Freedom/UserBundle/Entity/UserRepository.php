<?php

namespace Freedom\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{

	//Init filters
	public function addFilters(QueryBuilder $qb, $filters)
	{
		foreach ($filters as $key => $value) {
			$qb->andWhere('u.'.$key.' = :'.$key)->setParameter($key, $value);
		}
		
	}

	public function apiSearch($name, $filters, $offset, $limit, $order_by)
	{

		//Get the order_by's key
		$keys = array_keys($order_by);

	  	$qb = $this->_em->createQueryBuilder();
	  	$qb->select('u')
	    ->from('FreedomUserBundle:User', 'u')
	 	->where('u.username LIKE :name')            
        ->setParameter('name', '%'.$name.'%')
        ->orderBy('u.'.$keys[0], $order_by[$keys[0]])
        ->setMaxResults($limit)
        ->setFirstResult($offset);
        $this->addFilters($qb, $filters);

	    $result = $qb->getQuery()->getResult();
	    return $result;

	}

	public function alreadyFriend($user1, $user2)
	{

	  	$qb = $this->_em->createQueryBuilder();
	  	$qb->select('u')
	    ->from('FreedomUserBundle:Userfrienduser', 'u')
	 	->where('u.user1 = :user1 AND u.user2 = :user2') 
        ->orWhere('u.user2 = :user1 AND u.user1 = :user2')           
        ->setParameter('user1', $user1)
        ->setParameter('user2', $user2);

	    $result = $qb->getQuery()->getResult();
	    return $result;

	}

	public function isFriend($user)
	{

	  	$qb = $this->_em->createQueryBuilder();
	  	$qb->select('u')
	    ->from('FreedomUserBundle:Userfrienduser', 'u')
	 	->where('u.user1 = :user') 
        ->orWhere('u.user2 = :user')           
        ->setParameter('user', $user);

	    $result = $qb->getQuery()->getResult();
	    return $result;

	}

	public function apiSearchOne($entity)
	{

	  	$qb = $this->_em->createQueryBuilder();
	  	$qb->select('u')
	    ->from('FreedomUserBundle:User', 'u')
	    ->leftJoin('u.userfriendusers1', 'uu1')
	    ->addSelect('uu1')
	    // ->leftJoin('uu1.user1', 'uuu11')
	    // ->leftJoin('uu1.user2', 'uuu12')
	    ->leftJoin('u.userfriendusers2', 'uu2')
	    ->addSelect('uu2')
	    ->leftJoin('uu2.user1', 'uuu21')
	    ->leftJoin('uu2.user2', 'uuu22')
	 	->where('u.id = :user')            
        ->setParameter('user', $entity);

	    $result = $qb->getQuery()->getOneOrNullResult();
	    return $result;

	}

}
